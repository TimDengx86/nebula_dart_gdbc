// ignore_for_file: slash_for_doc_comments, unnecessary_new, non_constant_identifier_names, constant_identifier_names, unnecessary_this, empty_constructor_bodies, annotate_overrides, unnecessary_null_comparison, prefer_collection_literals, no_leading_underscores_for_local_identifiers, unused_import, unnecessary_import, prefer_interpolation_to_compose_strings, camel_case_types, prefer_generic_function_type_aliases, avoid_init_to_null, prefer_final_fields, unused_field

/**
 * Autogenerated by Thrift Compiler (0.18.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
library nebula.src.null_type;

class NullType {
  static const int __NULL__ = 0;
  static const int NaN = 1;
  static const int BAD_DATA = 2;
  static const int BAD_TYPE = 3;
  static const int ERR_OVERFLOW = 4;
  static const int UNKNOWN_PROP = 5;
  static const int DIV_BY_ZERO = 6;
  static const int OUT_OF_RANGE = 7;

  static final Set<int> VALID_VALUES = new Set.from([
    __NULL__,
    NaN,
    BAD_DATA,
    BAD_TYPE,
    ERR_OVERFLOW,
    UNKNOWN_PROP,
    DIV_BY_ZERO,
    OUT_OF_RANGE
  ]);
  static final Map<int, String> VALUES_TO_NAMES = {
    __NULL__: '__NULL__',
    NaN: 'NaN',
    BAD_DATA: 'BAD_DATA',
    BAD_TYPE: 'BAD_TYPE',
    ERR_OVERFLOW: 'ERR_OVERFLOW',
    UNKNOWN_PROP: 'UNKNOWN_PROP',
    DIV_BY_ZERO: 'DIV_BY_ZERO',
    OUT_OF_RANGE: 'OUT_OF_RANGE'
  };
}
